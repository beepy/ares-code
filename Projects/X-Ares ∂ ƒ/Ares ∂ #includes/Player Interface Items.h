/*Ares, a tactical space combat game.Copyright (C) 1997, 1999-2001, 2008 Nathan LamontThis program may be used, mofified, and redistributed either under the termsof the GNU General Public License version 2 or the GNU Lesser General PublicLicense version 3. See `LICENSE.md` for details.*/// Player Interface Items.h#define kPlayerInterfaceItems#ifndef kNateDraw#include "NateDraw.h"#endif#ifndef kAnyChar#include "AnyChar.h"#endif#pragma options align=mac68ktypedef enum{	kPlainRect = 1,	kLabeledRect = 2,	kListRect = 3,	kTextRect = 4,	kPlainButton = 5,	kRadioButton = 6,	kCheckboxButton = 7,	kPictureRect = 8,	kTabBox = 9,	kTabBoxTop = 10,	kTabBoxButton = 11} interfaceKindType;typedef enum{	kDimmed = 1,	kActive = 2,	kIH_Hilite = 3} interfaceItemStatusType;typedef enum{	kLarge = 1,	kSmall = 2} interfaceStyleType;typedef struct{	short				stringID;	short				stringNumber;} interfaceLabelType;typedef struct{	interfaceLabelType	label;	unsigned char		color;	TEHandle			teData;	Boolean				editable;} interfaceLabeledRectType;typedef struct{	interfaceLabelType			label;	short						(*getListLength)( void);	void						(*getItemString)( short, anyCharType *);	Boolean						(*itemHilited)( short, Boolean);//	void						(*hiliteItem)( short);	short						topItem;	interfaceItemStatusType		lineUpStatus;	interfaceItemStatusType		lineDownStatus;	interfaceItemStatusType		pageUpStatus;	interfaceItemStatusType		pageDownStatus;} interfaceListType;typedef struct{	short				textID;	Boolean				visibleBounds;} interfaceTextRectType;typedef struct{	short				topRightBorderSize;} interfaceTabBoxType;typedef struct{	short				pictureID;	Boolean				visibleBounds;} interfacePictureRectType; typedef struct{	interfaceLabelType			label;	short						key;	Boolean						defaultButton;	interfaceItemStatusType		status;} interfaceButtonType;typedef struct{	interfaceLabelType			label;	short						key;	Boolean						on;	interfaceItemStatusType		status;} interfaceRadioType; // also tab box button typetypedef struct{	interfaceLabelType			label;	short						key;	Boolean						on;	interfaceItemStatusType		status;} interfaceCheckboxType;typedef struct{	longRect			bounds;	union	{		interfaceLabeledRectType	labeledRect;		interfaceListType			listRect;		interfaceTextRectType		textRect;		interfaceButtonType			plainButton;		interfaceRadioType			radioButton;		interfaceCheckboxType		checkboxButton;		interfacePictureRectType	pictureRect;		interfaceTabBoxType			tabBox;	} item;		unsigned char		color;	interfaceKindType	kind;	interfaceStyleType	style;} interfaceItemType;#pragma options align=reset