/*Ares, a tactical space combat game.Copyright (C) 1997, 1999-2001, 2008 Nathan LamontThis program may be used, mofified, and redistributed either under the termsof the GNU General Public License version 2 or the GNU Lesser General PublicLicense version 3. See `LICENSE.md` for details.*/// Interface Handling.h#ifndef kPlayerInterfaceItems#include "Player Interface Items.h"#endif#ifndef kAnyChar#include "AnyChar.h"#endif#pragma options align=mac68kint	InterfaceHandlingInit( void);void InterfaceHandlingCleanup( void);int OpenInterface( short);long AppendInterface( short, long, Boolean);void ShortenInterface( long);void CloseInterface( void);void DrawEntireInterface( void);void DrawInterfaceRange( long, long, long);void DrawAllItemsOfKind( interfaceKindType, Boolean, Boolean, Boolean);void OffsetItemRange( long, long, long, long);void OffsetAllItems( long, long);void CenterItemRangeInRect( Rect *, long, long);void CenterAllItemsInRect( Rect *);void DrawAnyInterfaceItemOffToOn( interfaceItemType	*);void DrawAnyInterfaceItemSaveToOffToOn( interfaceItemType *);void InvalidateInterfaceFunctions( void);void InterfaceDisposeAllEditableText( void);void InterfaceIdle( void);short PtInInterfaceItem( Point);short InterfaceMouseDown( Point);short InterfaceKeyDown( long);Boolean InterfaceButtonHit( interfaceItemType *);Boolean InterfaceCheckboxHit( interfaceItemType *);Boolean InterfaceRadioButtonHit( interfaceItemType *);Boolean InterfaceTabBoxButtonHit( interfaceItemType *);void InterfaceListRectHit( interfaceItemType *, Point);void DrawStringInInterfaceContent( short, anyCharType *);interfaceItemType *GetAnyInterfaceItemPtr( long);void SetStatusOfAnyInterfaceItem( short, interfaceItemStatusType, Boolean);void SwitchAnyRadioOrCheckbox( short, Boolean);Boolean GetAnyRadioOrCheckboxOn( short);void RefreshInterfaceItem( short);void RefreshInterfaceListEntry( short, short);void InterfaceTextEditItemInit( short);void InterfaceTextEditSetText( short, anyCharType *);void InterfaceTextEditSelectAll( short);void InterfaceTextEditActivate( short);void InterfaceTextEditDeactivate( short);void SuspendActiveTextEdit( void);void ResumeActiveTextEdit( void);void UpdateAllTextEdit( void);void SetInterfaceTextEditColors( short);void CopyInterfaceTextEditContents( short, anyCharType *, long *);long GetInterfaceTextEditLength( short);void SetInterfaceListCallback(	short		whichItem,								short		(*getListLength)( void),								void		(*getItemString)( short, anyCharType *),								Boolean		(*itemHilited)( short, Boolean));void SetButtonKeyNum( short, short);short GetButtonKeyNum( short);#pragma options align=reset