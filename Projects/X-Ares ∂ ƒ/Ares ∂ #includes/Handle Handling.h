/*Ares, a tactical space combat game.Copyright (C) 1997, 1999-2001, 2008 Nathan LamontThis program may be used, mofified, and redistributed either under the termsof the GNU General Public License version 2 or the GNU Lesser General PublicLicense version 3. See `LICENSE.md` for details.*/// Handle Handling.h#pragma options align=mac68k#define	mHandleLockAndRegister( mhandle, munlockProc, mlockPrc, mresolveProc, mhandlename)\MoveHHi( (mhandle));\HLock( (mhandle));\HHClearHandle( mhandle);\HHRegisterHandle( &(mhandle), munlockProc, mlockPrc, mresolveProc, false, mhandlename);#define	mDataHandleLockAndRegister( mhandle, munlockProc, mlockPrc, mresolveProc, mhandlename)\MoveHHi( (mhandle));\HLock( (mhandle));\HHRegisterHandle( &(mhandle), munlockProc, mlockPrc, mresolveProc, false, mhandlename);#define	mCheckDataHandleLockAndRegister( mhandle, munlockProc, mlockPrc, mresolveProc, mhandlename)\MoveHHi( (mhandle));\HLock( (mhandle));\HHRegisterHandle( &(mhandle), munlockProc, mlockPrc, mresolveProc, true, mhandlename);#define	mHandleDisposeAndDeregister( mhandle)\HHDeregisterHandle( &(mhandle));\DisposeHandle( (mhandle));short HandleHandlerInit( void);void HandleHandlerCleanup( void);void ResetAllHandleData( void);short HHRegisterHandle( Handle *newHandle,			void			(*unlockData)( Handle),			void			(*lockData)( Handle),			void			(*resolveData)( Handle),			Boolean, StringPtr);void HHDeregisterHandle( Handle *);void HHMaxMem( void);Handle HHNewHandle( long);Handle HHGetResource( ResType, short);void HHConcatenateHandle( Handle, Handle);void HHClearHandle( Handle);void HHCheckHandle( Handle, Handle);void HHCheckAllHandles( void);#pragma options align=reset